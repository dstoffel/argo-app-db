apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "hello-world.fullname" . }}-db
  annotations:
    "helm.sh/hook": pre-install
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  template:
    spec:
      serviceAccountName: {{ include "hello-world.fullname" . }}
      automountServiceAccountToken: true
      initContainers:
        - name: db-init
          image: bitnami/kubectl
          command:
          - /bin/bash
          - -c
          - | 
            DEP='{{ include "hello-world.fullname" . }}'
            if kubectl get deployments.apps $DEP
            then
              CURRENT_VERSION=$(kubectl get deployment $DEP -o jsonpath='{.metadata.labels.app\.kubernetes\.io/version}' | awk -F. '{print $1"."$2}')
              NEW_VERSION=$(echo "{{ .Chart.AppVersion }}" | awk -F. '{print $1"."$2}')
              if [ "$(printf "%s\n%s" "$CURRENT_VERSION" "$NEW_VERSION" | sort -V | head -n1)" != "$NEW_VERSION" ]; then
                echo "Detected major or minor version upgrade: $CURRENT_VERSION -> $NEW_VERSION"
                echo "Scaling down application to 0 replicas before upgrading db"
                kubectl scale deployment $DEP --replicas=0 --timeout=5m
                echo "Application scaled to 0, waiting pod to terminated"
                kubectl get pod
                echo "upgrading DB"
              else
                echo "Patch upgrade, skipping upgrade db: $CURRENT_VERSION -> $NEW_VERSION"
              fi
            else
              echo "Application not yet installed, initialazing db"
            fi
            sleep 15
      restartPolicy: Never
